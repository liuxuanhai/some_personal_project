/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.struts.action;

import java.net.URLDecoder;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.pojo.Academy;
import com.pojo.Classroom;
import com.pojo.Teacher;
import com.struts.form.TeacherForm;
import com.struts.form.TeacherForm;
import com.service.TeacherService;
import com.util.Md5reg;
import com.util.Page;
import com.util.PageUtil;
import com.util.StringUtil;
/** 
 * MyEclipse Struts
 * Creation date: 04-27-2016
 * 
 * XDoclet definition:
 * @struts.action path="/teacher" name="teacherForm" input="/form/teacher.jsp" scope="request" validate="true"
 */
public class TeacherAction extends DispatchAction {
	/*
	 * Generated Methods
	 */
	private TeacherService teacherService;
	public TeacherService getTeacherService() {
		return teacherService;
	}
	public void setTeacherService(TeacherService teacherService) {
		this.teacherService = teacherService;
	}
	
	//修改教师信息
	public void teacherInfoModify(String[] list)
	{
		Teacher user=teacherService.teacherByID(list[0]);
		user.setName(list[1]);
		user.setSex(list[2]);
		user.setDirection(list[3]);
		user.setPhone(list[4]);
		user.setIdcard(list[5]);
		user.setQqid(list[6]);
		teacherService.teacherModify(user);
	}
	//修改密码
	public void teacherPWDModify(String id,String pwd)
	{
		Teacher user=teacherService.teacherByID(id);
		Md5reg md5=new Md5reg();
		user.setPwd(md5.hasString(pwd));
		teacherService.teacherModify(user);
	}
	
	//获得教师指导班级
	public Object[] getTeacherClass(String teaid)
	{
		Teacher tea=teacherService.teacherByID(teaid);
		Object []obj=new Object[tea.getClassrooms().size()];
		int i=0;
		for(Object cls: tea.getClassrooms())
		{
			obj[i++]=((Classroom)cls).getClassname();//获得班级
		}
		return obj;
	}
	
	//获得教师姓名
	public String getTeacherName(String teaid)
	{
		Teacher tea=teacherService.teacherByID(teaid);
		return tea.getName();
	}
	
	// 通过用户密码 验证登录  dwr实现AJAX方式 验证登录
	public String teacherLogin(String teaid,String password)
	{
		Md5reg md5=new Md5reg();
		Teacher user=new Teacher();
		user.setTeaid(teaid);
		user.setPwd(md5.hasString(password));
		if(teacherService.teacherLogin(user))
			return "success";
    	return "fail";
	}
	
	// 通过用户密码 验证登录  dwr实现AJAX方式 验证登录
	public String academyLogin(String teaid,String password)
	{
		Md5reg md5=new Md5reg();
		Teacher user=new Teacher();
		user.setTeaid(teaid);
		user.setPwd(md5.hasString(password));
		user.setRoletype("1");
		if(teacherService.teacherLogin(user))
			return "success";
    	return "fail";
	}
	
	
	//判断学号是否存在
	public boolean findTeacherTeaid(String stuid)
	{
		if(teacherService.teacherByID(stuid)!=null) return true;
		else
			return false;
	}
	
	// 通过action  method方式登录院系
	public ActionForward teacherLoginExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		String id=request.getParameter("userid");
		request.getSession().setAttribute("teacher",teacherService.teacherByID(id));
		return mapping.findForward("teacherLogin");  //成功
	}
	
	// 通过action  method方式登录院系
	public ActionForward academyLoginExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		String id=request.getParameter("userid");
		request.getSession().setAttribute("academyteacher",teacherService.teacherByID(id));
		return mapping.findForward("academyLogin");  //成功
	}
	
	//获得院系教师
	public ActionForward getAcademyAdminTeacherExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		String id=request.getParameter("teacherid");
		request.getSession().setAttribute("academyadmininfo",teacherService.teacherByID(id));
		return mapping.findForward("academyAdminInfo");  //成功
	}
	
	//获得院系教师
	public ActionForward getPersonTeacherExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		String id=request.getParameter("teacherid");
		request.getSession().setAttribute("personteacherinfo",teacherService.teacherByID(id));
		return mapping.findForward("personTeacherInfo");  //成功
	}
	
	//getTeacherClassExecute获得教师班级
	public ActionForward getTeacherClassExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		String id=request.getParameter("teacherid");
		request.getSession().setAttribute("teacherinfo",teacherService.teacherByID(id));
		return mapping.findForward("teacherFuzeClass");  //成功
	}
	
	//添加teacher之前 返回院系
	public ActionForward teacherBeforeAddexecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		TeacherForm teacherForm = (TeacherForm) form;// TODO Auto-generated method stub
		request.getSession().setAttribute("teaacademylist",teacherService.getAcademyName());
		return mapping.findForward("teacherBeforeAdd");  //成功
	}
	
	// 通过action  method方式添加teacher
	public ActionForward teacherAddExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		TeacherForm tea= (TeacherForm) form;// TODO Auto-generated method stub
		// 乱码问题
		Md5reg md5=new Md5reg();
		Teacher user=new Teacher();
		user.setTeaid(tea.getTeaid());
		user.setName(tea.getName());
		user.setSex(tea.getSex());
		user.setLevel(tea.getLevel());
		Academy aca=new Academy();
		aca.setAcademyid(new Integer(tea.getAcademyid()));
		user.setAcademy(aca);
		user.setPhone(tea.getPhone());
		user.setDirection(tea.getDirection());
		user.setIdcard(tea.getIdcard());
		user.setPwd(md5.hasString(tea.getTeaid()));
		user.setSchooltime(StringUtil.getTimestampFromDate(StringUtil.getDateFromString(tea.getSchooltime())));
		user.setQqid(tea.getQqid());
		user.setRoletype(tea.getRoletype());
		user.setRoletype("0");
		teacherService.teacherAdd(user);
		return mapping.findForward("teacherFind");  //成功
	}
	
	// 通过action  method方式删除teacher
	public ActionForward teacherDeleteExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		String id=request.getParameter("teacherid");
		Teacher user=teacherService.teacherByID(id);
		teacherService.teacherDelete(user);
		String findinfo=request.getParameter("findinfo");
		if(findinfo!=null)
			findinfo=URLDecoder.decode(findinfo,"UTF-8");
		else
			findinfo="";
		request.getSession().setAttribute("findinfo",findinfo);
		String pagenumber=request.getParameter("pagenumber");
		if(pagenumber==null) pagenumber="1";
		Page p=PageUtil.createPage(10,teacherService.findNumsByLikeNameOrId(findinfo),new Integer(pagenumber));
		request.getSession().setAttribute("teacherlist",teacherService.teacherLikeNameOrId(findinfo,p));  //设置session
		request.getSession().setAttribute("teaacademylist",teacherService.getAcademyName());
		request.getSession().setAttribute("pagenumber",p.getCurrentPage());
		request.getSession().setAttribute("maxpagenumber",p.getTotalPage());
		return mapping.findForward("teacherMana");  //成功
	}
	
	// 通过action  method方式修改teacher之前
	public ActionForward teacherBeforeModifyExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		String id=request.getParameter("teacherid");
		Teacher user=teacherService.teacherByID(id);
		request.getSession().setAttribute("teachermodifyinfo",user);  //设置session
		request.getSession().setAttribute("teaacademylist",teacherService.getAcademyName());
		return mapping.findForward("teacherBeforeModify");  //成功
	}
	
	// 通过action  method方式修改teacher
	public ActionForward teacherModifyExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		TeacherForm tea = (TeacherForm) form;// TODO Auto-generated method stub
		Teacher user=teacherService.teacherByID(tea.getTeaid());
		user.setName(tea.getName());
		user.setSex(tea.getSex());
		user.setLevel(tea.getLevel());
		Academy aca=new Academy();
		aca.setAcademyid(new Integer(tea.getAcademyid()));
		user.setAcademy(aca);
		user.setPhone(tea.getPhone());
		user.setDirection(tea.getDirection());
		user.setIdcard(tea.getIdcard());
		user.setSchooltime(StringUtil.getTimestampFromDate(StringUtil.getDateFromString(tea.getSchooltime())));
		user.setQqid(tea.getQqid());
		user.setRoletype(tea.getRoletype());
		teacherService.teacherModify(user);
		return mapping.findForward("teacherFind");  //成功
	}
	
	
	
	// 通过action  method方式  获取所有teacher
	public ActionForward teacherFindExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		
		TeacherForm teacherForm = (TeacherForm) form;// TODO Auto-generated method stub
		//decode一次
		String findinfo=request.getParameter("findinfo");
		if(findinfo!=null)
			findinfo=URLDecoder.decode(findinfo,"UTF-8");
		else
			findinfo="";
		request.getSession().setAttribute("findinfo",findinfo);
		
		String pagenumber=request.getParameter("pagenumber");
		if(pagenumber==null) pagenumber="1";
		Page p=PageUtil.createPage(10,teacherService.findNumsByLikeNameOrId(findinfo),new Integer(pagenumber));
		request.getSession().setAttribute("teacherlist",teacherService.teacherLikeNameOrId(findinfo,p));  //设置session
		request.getSession().setAttribute("teaacademylist",teacherService.getAcademyName());
		request.getSession().setAttribute("pagenumber",p.getCurrentPage());
		request.getSession().setAttribute("maxpagenumber",p.getTotalPage());
		return mapping.findForward("teacherMana");  //成功
	}
	
	public ActionForward teacherFindByAcademyIDExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		
		TeacherForm teacherForm = (TeacherForm) form;// TODO Auto-generated method stub
		String academyid=request.getParameter("academyid"); 
		//decode一次
		String findinfo=request.getParameter("findinfo");
		if(findinfo!=null)
			findinfo=URLDecoder.decode(findinfo,"UTF-8");
		else
			findinfo="";
		request.getSession().setAttribute("findinfo",findinfo);
		
		
		String pagenumber=request.getParameter("pagenumber");
		if(pagenumber==null) pagenumber="1";
		Page p=PageUtil.createPage(10,teacherService.findNumsByLikeNameAndAcademyid(findinfo,academyid),new Integer(pagenumber));
		request.getSession().setAttribute("teacherlist",teacherService.teacherLikeNameAndAcademyid(findinfo,academyid,p));  //设置session
		request.getSession().setAttribute("academyteacher",teacherService.getAcademyByacademyid(academyid));
		request.getSession().setAttribute("pagenumber",p.getCurrentPage());
		request.getSession().setAttribute("maxpagenumber",p.getTotalPage());
		
		return mapping.findForward("teacherManaByAcademyID");  //成功
	}
	
	//
	public ActionForward academyTeacherFindByAcademyIDExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		
		TeacherForm teacherForm = (TeacherForm) form;// TODO Auto-generated method stub
		String academyid=request.getParameter("academyid"); 
		//decode一次
		String findinfo=request.getParameter("findinfo");
		if(findinfo!=null)
			findinfo=URLDecoder.decode(findinfo,"UTF-8");
		else
			findinfo="";
		request.getSession().setAttribute("findinfo",findinfo);
		
		
		String pagenumber=request.getParameter("pagenumber");
		if(pagenumber==null) pagenumber="1";
		Page p=PageUtil.createPage(10,teacherService.findNumsByLikeNameAndAcademyid(findinfo,academyid),new Integer(pagenumber));
		request.getSession().setAttribute("teacherlist",teacherService.teacherLikeNameAndAcademyid(findinfo,academyid,p));  //设置session
		request.getSession().setAttribute("academyteacher",teacherService.getAcademyByacademyid(academyid));
		request.getSession().setAttribute("pagenumber",p.getCurrentPage());
		request.getSession().setAttribute("maxpagenumber",p.getTotalPage());
		
		return mapping.findForward("academyTeacherManaByAcademyID");  //成功
	}
}