/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.struts.action;

import java.net.URLDecoder;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.pojo.Classroom;
import com.pojo.Student;
import com.pojo.Student;
import com.pojo.Teacher;
import com.struts.form.StudentForm;
import com.struts.form.StudentForm;
import com.service.StudentService;
import com.util.Md5reg;
import com.util.Page;
import com.util.PageUtil;
import com.util.StringUtil;
/** 
 * MyEclipse Struts
 * Creation date: 04-27-2016
 * 
 * XDoclet definition:
 * @struts.action path="/student" name="studentForm" input="/form/student.jsp" scope="request" validate="true"
 */
public class StudentAction extends DispatchAction {
	/*
	 * Generated Methods
	 */
	private StudentService studentService;
	public StudentService getStudentService() {
		return studentService;
	}
	public void setStudentService(StudentService studentService) {
		this.studentService = studentService;
	}
	
	//修改教师信息
	public void studentInfoModify(String[] list)
	{
		Student user=studentService.studentByID(list[0]);
		user.setName(list[1]);
		user.setSex(list[2]);
		user.setPhone(list[3]);
		user.setIdcard(list[4]);
		user.setQqid(list[5]);
		studentService.studentModify(user);
	}
	//修改密码
	public void studentPWDModify(String id,String pwd)
	{
		Student user=studentService.studentByID(id);
		Md5reg md5=new Md5reg();
		user.setPwd(md5.hasString(pwd));
		studentService.studentModify(user);
	}
	
	//获得院系就业统计
	public Object[][] getAcademyJobsStat(String academyid)
	{
		//在校  顶岗实习 专升本 研究生 公务员  已就业 创业 入伍
		return studentService.getAcademyJobsStat(academyid);
	}
	
	//获得班级就业统计
	public Object[][] getClassJobsStat(String academyid)
	{
		//在校  顶岗实习 专升本 研究生 公务员  已就业 创业 入伍
		return studentService.getClassJobsStat(academyid);
	}
	
	// 通过用户密码 验证登录  dwr实现AJAX方式 验证登录
	public String studentLogin(String stuid,String password)
	{
		Md5reg md5=new Md5reg();
		Student user=new Student();
		user.setStuid(stuid);
		user.setPwd(md5.hasString(password));
		if(studentService.studentLogin(user))
			return "success";
    	return "fail";
	}
	//判断学号是否存在
	public boolean findStudentStuid(String stuid)
	{
		if(studentService.studentByID(stuid)!=null) return true;
		else
			return false;
	}

	

	//获得院系班级
	public Object[][] getAcademyClassroom(String academy)
	{
		return studentService.getAcademyClassroom(academy);
	}
	
	
	// 通过action  method方式登录院系
	public ActionForward studentLoginExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		String id=request.getParameter("studentid");
		request.getSession().setAttribute("student",studentService.studentByID(id));
		return mapping.findForward("studentLogin");  //成功
	}
	//获得院系教师
	public ActionForward getPersonStudentExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		String id=request.getParameter("studentid");
		request.getSession().setAttribute("studentpersoninfo",studentService.studentByID(id));
		return mapping.findForward("personStudentInfo");  //成功
	}

	//添加student之前 返回院系
	public ActionForward studentBeforeAddexecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		StudentForm studentForm = (StudentForm) form;// TODO Auto-generated method stub
		request.getSession().setAttribute("stuacademylist",studentService.getAcademyName());
		return mapping.findForward("studentBeforeAdd");  //成功
	}
	
	// 通过action  method方式添加student
	public ActionForward studentAddExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		StudentForm stu = (StudentForm) form;// TODO Auto-generated method stub
		// 乱码问题
		Md5reg md5=new Md5reg();
		Student user=new Student();
		user.setStuid(stu.getStuid());
		user.setName(stu.getName());
		user.setSex(stu.getSex());
		Classroom cls=new Classroom();
		cls.setClassid(new Integer(stu.getClassid()));
		user.setClassroom(cls);
		user.setPhone(stu.getPhone());
		user.setIdcard(stu.getIdcard());
		user.setSchooltime(StringUtil.getTimestampFromDate(StringUtil.getDateFromString(stu.getSchooltime())));
		user.setQqid(stu.getQqid());
		user.setDirtype("在校");
		user.setPwd(md5.hasString(stu.getStuid()));  //学号初始化为密码
		studentService.studentAdd(user);
		return mapping.findForward("studentFind");  //成功
	}
	
	// 通过action  method方式删除student
	public ActionForward studentDeleteExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		String id=request.getParameter("studentid");
		Student user=studentService.studentByID(id);
		studentService.studentDelete(user);
		String findinfo=request.getParameter("findinfo");
		if(findinfo!=null)
			findinfo=URLDecoder.decode(findinfo,"UTF-8");
		else
			findinfo="";
		request.getSession().setAttribute("findinfo",findinfo);
		String pagenumber=request.getParameter("pagenumber");
		if(pagenumber==null) pagenumber="1";
		Page p=PageUtil.createPage(10,studentService.findNumsByLikeNameOrId(findinfo),new Integer(pagenumber));
		request.getSession().setAttribute("studentlist",studentService.studentLikeNameOrId(findinfo,p));  //设置session
		request.getSession().setAttribute("stuacademylist",studentService.getAcademyName());
		request.getSession().setAttribute("pagenumber",p.getCurrentPage());
		request.getSession().setAttribute("maxpagenumber",p.getTotalPage());
		return mapping.findForward("studentMana");  //成功
	}
	
	// 通过action  method方式修改student之前
	public ActionForward studentBeforeModifyExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		String id=request.getParameter("studentid");
		Student user=studentService.studentByID(id);
		request.getSession().setAttribute("studentmodifyinfo",user);  //设置session
		request.getSession().setAttribute("stuacademylist",studentService.getAcademyName());
		return mapping.findForward("studentBeforeModify");  //成功
	}
	
	// 通过action  method方式修改student
	public ActionForward studentModifyExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		StudentForm stu = (StudentForm) form;// TODO Auto-generated method stub
		Student user=studentService.studentByID(stu.getStuid());
		user.setName(stu.getName());
		user.setSex(stu.getSex());
		Classroom cls=new Classroom();
		cls.setClassid(new Integer(stu.getClassid()));
		user.setClassroom(cls);
		user.setPhone(stu.getPhone());
		user.setIdcard(stu.getIdcard());
		user.setSchooltime(StringUtil.getTimestampFromDate(StringUtil.getDateFromString(stu.getSchooltime())));
		user.setQqid(stu.getQqid());
		studentService.studentModify(user);
		return mapping.findForward("studentFind");  //成功
	}
	
	
	// 通过action  method方式  获取所有student
	public ActionForward studentFindExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		
		StudentForm studentForm = (StudentForm) form;// TODO Auto-generated method stub
		//decode一次
		String findinfo=request.getParameter("findinfo");
		if(findinfo!=null)
			findinfo=URLDecoder.decode(findinfo,"UTF-8");
		else
			findinfo="";
		request.getSession().setAttribute("findinfo",findinfo);
		
		String pagenumber=request.getParameter("pagenumber");
		if(pagenumber==null) pagenumber="1";
		Page p=PageUtil.createPage(10,studentService.findNumsByLikeNameOrId(findinfo),new Integer(pagenumber));
		request.getSession().setAttribute("studentlist",studentService.studentLikeNameOrId(findinfo,p));  //设置session
		request.getSession().setAttribute("stuacademylist",studentService.getAcademyName());
		request.getSession().setAttribute("pagenumber",p.getCurrentPage());
		request.getSession().setAttribute("maxpagenumber",p.getTotalPage());
		return mapping.findForward("studentMana");  //成功
	}
	
	// 通过action  method方式  获取所有student
	public ActionForward studentFindByClassIDExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		
		StudentForm studentForm = (StudentForm) form;// TODO Auto-generated method stub
		String classid=request.getParameter("classid");
		//decode一次
		String findinfo=request.getParameter("findinfo");
		if(findinfo!=null)
			findinfo=URLDecoder.decode(findinfo,"UTF-8");
		else
			findinfo="";
		request.getSession().setAttribute("findinfo",findinfo);
		
		String pagenumber=request.getParameter("pagenumber");
		if(pagenumber==null) pagenumber="1";
		Page p=PageUtil.createPage(10,studentService.findNumsByLikeNameAndClassid(findinfo,classid),new Integer(pagenumber));
		request.getSession().setAttribute("studentlist",studentService.studentLikeNameAndClassid(findinfo,classid,p));  //设置session
		request.getSession().setAttribute("stuclassroom",studentService.getClassroomByclassid(classid));
		request.getSession().setAttribute("pagenumber",p.getCurrentPage());
		request.getSession().setAttribute("maxpagenumber",p.getTotalPage());
		return mapping.findForward("studentManaByClassID");  //成功
	}
	
	// 通过action  method方式  获取所有student
	public ActionForward studentAcademyFindByClassIDExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		
		StudentForm studentForm = (StudentForm) form;// TODO Auto-generated method stub
		String classid=request.getParameter("classid");
		//decode一次
		String findinfo=request.getParameter("findinfo");
		if(findinfo!=null)
			findinfo=URLDecoder.decode(findinfo,"UTF-8");
		else
			findinfo="";
		request.getSession().setAttribute("findinfo",findinfo);
		
		String pagenumber=request.getParameter("pagenumber");
		if(pagenumber==null) pagenumber="1";
		Page p=PageUtil.createPage(10,studentService.findNumsByLikeNameAndClassid(findinfo,classid),new Integer(pagenumber));
		request.getSession().setAttribute("studentlist",studentService.studentLikeNameAndClassid(findinfo,classid,p));  //设置session
		request.getSession().setAttribute("stuclassroom",studentService.getClassroomByclassid(classid));
		request.getSession().setAttribute("pagenumber",p.getCurrentPage());
		request.getSession().setAttribute("maxpagenumber",p.getTotalPage());
		return mapping.findForward("studentAcademyManaByClassID");  //成功
	}
	// 通过action  method方式  获取所有student
	public ActionForward studentAcademyFindByClassIDExecute1(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		
		StudentForm studentForm = (StudentForm) form;// TODO Auto-generated method stub
		String classid=request.getParameter("classid");
		//decode一次
		String findinfo=request.getParameter("findinfo");
		if(findinfo!=null)
			findinfo=URLDecoder.decode(findinfo,"UTF-8");
		else
			findinfo="";
		request.getSession().setAttribute("findinfo",findinfo);
		
		String pagenumber=request.getParameter("pagenumber");
		if(pagenumber==null) pagenumber="1";
		Page p=PageUtil.createPage(10,studentService.findNumsByLikeNameAndClassid(findinfo,classid),new Integer(pagenumber));
		request.getSession().setAttribute("studentlist",studentService.studentLikeNameAndClassid(findinfo,classid,p));  //设置session
		request.getSession().setAttribute("stuclassroom",studentService.getClassroomByclassid(classid));
		request.getSession().setAttribute("pagenumber",p.getCurrentPage());
		request.getSession().setAttribute("maxpagenumber",p.getTotalPage());
		return mapping.findForward("studentTeacherManaByClassID");  //成功
	}
	
	// 通过action  method方式  获取所有student
	public ActionForward classJobsFindByAcademyIDExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		
		StudentForm studentForm = (StudentForm) form;// TODO Auto-generated method stub
		String academyid=request.getParameter("academyid");
		request.getSession().setAttribute("academyid",academyid);
		request.getSession().setAttribute("classjobslist",studentService.getAcademyClassroomJobsStat(academyid));
		request.getSession().setAttribute("academyname",studentService.getAcademyNameById(academyid));
		return mapping.findForward("academyClassjobsByAcademyid");  //成功
	}
	
	// 学生去向查看
	public ActionForward studentDirtypeStatusExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		
		StudentForm studentForm = (StudentForm) form;// TODO Auto-generated method stub
		String studentid=request.getParameter("studentid");
		request.getSession().setAttribute("student",studentService.studentByID(studentid));
		return mapping.findForward("studentDirtypeStatus");  //成功
	}
	//修改去向类型
	public void modifyDirTypeStatus(String stuid,String dirtype)
	{
		System.out.println("55");
		Student stu=studentService.studentByID(stuid);
		stu.setDirtype(dirtype);
		studentService.studentModify(stu);
	}
	
	//studentDirTeacherExecute查看知道老师
	public ActionForward studentDirTeacherExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		
		StudentForm studentForm = (StudentForm) form;// TODO Auto-generated method stub
		String studentid=request.getParameter("studentid");
		request.getSession().setAttribute("student",studentService.studentByID(studentid));
		return mapping.findForward("studentDirTescher");  //成功
	}
}