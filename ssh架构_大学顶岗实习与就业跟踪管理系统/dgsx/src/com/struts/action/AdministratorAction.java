/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.struts.action;

import java.net.URLDecoder;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.pojo.Administrator;
import com.service.AdministratorService;
import com.struts.form.AdministratorForm;
import com.util.Md5reg;

/** 
 * MyEclipse Struts
 * Creation date: 04-27-2016
 * 
 * XDoclet definition:
 * @struts.action path="/administrator" name="administratorForm" input="/form/administrator.jsp" scope="request" validate="true"
 */
public class AdministratorAction extends DispatchAction {
		// 依赖注入 AdministratorService
		private AdministratorService administratorService;

		public AdministratorService getAdministratorService() {
			return administratorService;
		}

		public void setAdministratorService(AdministratorService administratorService) {
			this.administratorService = administratorService;
		}
		
		// 通过用户密码 验证登录  dwr实现AJAX方式 验证登录
		public String administratorLogin(String username,String password)
		{
			Md5reg md5=new Md5reg();
			Administrator user=new Administrator(username,md5.hasString(password));
			if(administratorService.administratorLogin(user))
				return "success";
	    	return "fail";
		}
		
		// 通过action  method方式添加administrator
		public ActionForward administratorAddExecute(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) throws Exception{
			AdministratorForm administratorForm = (AdministratorForm) form;// TODO Auto-generated method stub
			// 乱码问题
			Md5reg md5=new Md5reg();
			Administrator user=new Administrator(administratorForm.getAdministratorname(),md5.hasString(administratorForm.getAdministratorpwd()));
			administratorService.administratorAdd(user);
			request.getSession().setAttribute("adminlist",administratorService.administratorLikeNameOrId(""));  //设置session
			return mapping.findForward("administratorMana");  //成功
		}
		
		// 通过action  method方式删除administrator
		public ActionForward administratorDeleteExecute(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) throws Exception{
			String adminid=request.getParameter("adminid");
			Administrator user=new Administrator();
			user.setAdminid(Integer.parseInt(adminid));
			administratorService.administratorDelete(user);
			
			String findinfo=request.getParameter("findinfo");
			if(findinfo!=null)
				findinfo=URLDecoder.decode(findinfo,"UTF-8");
			else
				findinfo="";
			request.getSession().setAttribute("findinfo",findinfo);
			request.getSession().setAttribute("adminlist",administratorService.administratorLikeNameOrId(findinfo));  //设置session
			return mapping.findForward("administratorMana");  //成功
		}
		
		// 通过action  method方式修改administrator之前
		public ActionForward administratorBeforeModifyExecute(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) throws Exception{
			String adminid=request.getParameter("adminid");
			Administrator user=administratorService.administratorByID(Integer.parseInt(adminid));
			request.getSession().setAttribute("adminmodifyinfo",user);  //设置session
			return mapping.findForward("administratorBeforeModify");  //成功
		}
		
		// 通过action  method方式修改administrator
		public ActionForward administratorModifyExecute(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) throws Exception{
			AdministratorForm administratorForm = (AdministratorForm) form;// TODO Auto-generated method stub
			String adminid=request.getParameter("adminid");
			Administrator user=administratorService.administratorByID(new Integer(adminid));
			Md5reg md5=new Md5reg();
			user.setPasswd(md5.hasString(administratorForm.getAdministratorpwd()));
			administratorService.administratorModify(user);
			request.getSession().setAttribute("adminlist",administratorService.administratorLikeNameOrId(""));  //设置session
			return mapping.findForward("administratorMana");  //成功
		}
		
		
		// 通过action  method方式  获取所有administrator
		public ActionForward administratorFindExecute(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) throws Exception{
			
			AdministratorForm administratorForm = (AdministratorForm) form;// TODO Auto-generated method stub
			//decode一次
			String findinfo=request.getParameter("findinfo");
			if(findinfo!=null)
				findinfo=URLDecoder.decode(findinfo,"UTF-8");
			else
				findinfo="";
			request.getSession().setAttribute("findinfo",findinfo);
			request.getSession().setAttribute("adminlist",administratorService.administratorLikeNameOrId(findinfo));  //设置session
			return mapping.findForward("administratorMana");  //成功
		}
}