/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.struts.action;

import java.net.URLDecoder;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.pojo.Classroom;
import com.pojo.Studentdocument;
import com.pojo.Teacher;
import com.service.StudentdocumentService;
import com.struts.form.GonggaoForm;
import com.util.Page;
import com.util.PageUtil;

/** 
 * MyEclipse Struts
 * Creation date: 05-18-2016
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class StudentdocumentAction extends DispatchAction {
	private StudentdocumentService studentdocumentService;
	public StudentdocumentService getStudentdocumentService() {
		return studentdocumentService;
	}
	public void setStudentdocumentService(StudentdocumentService studentdocumentService) {
		this.studentdocumentService = studentdocumentService;
	}
	
	// 修改审核状态
	public void shenhestatus(String id,String status)
	{
		Studentdocument studoc=studentdocumentService.studentdocumentByID(id);
		studoc.setPaperstatus(status);
		studentdocumentService.studentdocumentModify(studoc);
	}
	
	// 通过action  method方式  获取所有studentdocumentFindExecute
	public ActionForward studentdocumentFindExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		String studentid=request.getParameter("studentid");
		//System.out.println(request.getContextPath());
		String doctype=request.getParameter("doctype");
		if(doctype==null) doctype="0";
		request.getSession().setAttribute("doctype",doctype);
		request.getSession().setAttribute("studentid",studentid);
		request.getSession().setAttribute("doclist",studentdocumentService.getStudentDocByStuidAndType(studentid, doctype));
		return mapping.findForward("studentdocumentMana");  //成功
	}
	
	//studentdocumentByTeacherFindExecute
	public ActionForward studentdocumentByTeacherFindExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		String teacherid=request.getParameter("teacherid");
		Teacher tea=studentdocumentService.teacherByID(teacherid);
		//System.out.println(request.getContextPath());
		String classid=request.getParameter("classid");
		if(classid==null) 
		{
			if(tea.getClassrooms().size()>0)
			{
				Classroom cls=(Classroom)tea.getClassrooms().iterator().next();
				classid=cls.getClassid().toString();
			}
			else
				classid="";
		}
		String docstuatus=request.getParameter("docstatus");
		String papertype=request.getParameter("papertype");
		if(docstuatus==null) docstuatus="";  // 全部
		String findinfo=request.getParameter("findinfo");
		if(findinfo==null) findinfo="";
		else
			findinfo=URLDecoder.decode(findinfo,"UTF-8");
		request.getSession().setAttribute("classid",classid);
		request.getSession().setAttribute("teacherid",teacherid);
		request.getSession().setAttribute("docstuatus",docstuatus);
		request.getSession().setAttribute("papertype",papertype);
		request.getSession().setAttribute("findinfo",findinfo);
		request.getSession().setAttribute("teacher",tea);
		
		request.getSession().setAttribute("doclist",studentdocumentService.getStudentDocByTypeAndClassid(classid,papertype, docstuatus,findinfo));
		return mapping.findForward("studentdocumentByTeacherMana");  //成功
	}
	
	//studentdocumentByTeacherFindExecute
		public ActionForward studentdocumentByTeacherFindExecute1(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) throws Exception{
			String teacherid=request.getParameter("teacherid");
			Teacher tea=studentdocumentService.teacherByID(teacherid);
			//System.out.println(request.getContextPath());
			String classid=request.getParameter("classid");
			if(classid==null) 
			{
				if(tea.getClassrooms().size()>0)
				{
					Classroom cls=(Classroom)tea.getClassrooms().iterator().next();
					classid=cls.getClassid().toString();
				}
				else
					classid="";
			}
			String papertype=request.getParameter("papertype");
			String findinfo=request.getParameter("findinfo");
			if(findinfo==null) findinfo="";
			else
				findinfo=URLDecoder.decode(findinfo,"UTF-8");
			request.getSession().setAttribute("classid",classid);
			request.getSession().setAttribute("teacherid",teacherid);
			request.getSession().setAttribute("papertype",papertype);
			request.getSession().setAttribute("findinfo",findinfo);
			request.getSession().setAttribute("teacher",tea);
			
			request.getSession().setAttribute("doclist",studentdocumentService.getStudentDocByTypeAndClassid(classid,papertype,findinfo));
			return mapping.findForward("studentdocumentByTeacherMana1");  //成功
		}
		
		//studentshixizhoujiLookExecute
		public ActionForward studentshixizhoujiLookExecute(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) throws Exception{
			String teacherid=request.getParameter("teacherid");
			String studentid=request.getParameter("studentid");
			
			request.getSession().setAttribute("teacherid",teacherid);
			request.getSession().setAttribute("studentid",studentid);
			request.getSession().setAttribute("student",studentdocumentService.getStudentByStuid(studentid));
			request.getSession().setAttribute("doclist",studentdocumentService.getStudentDocByStuid(studentid));
			return mapping.findForward("studentshixizhoujiByTeacher");  //成功
		}
		
		//查询待审核材料
		public ActionForward studocReviewByTeacherFindExecute(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) throws Exception{
			String teacherid=request.getParameter("teacherid");
			request.getSession().setAttribute("teacherid",teacherid);
			request.getSession().setAttribute("docreviewlist",studentdocumentService.getStudentDocByReviewByTeaid(teacherid));
			return mapping.findForward("studentdocReviewByTeacher");  //成功
		}
}