/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.struts.action;

import java.net.URLDecoder;
import java.text.Format;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.pojo.Spotorder;
import com.service.SpotorderService;
import com.struts.form.SpotorderForm;

/** 
 * MyEclipse Struts
 * Creation date: 04-18-2016
 * 
 * XDoclet definition:
 * @struts.action path="/spotorder" name="spotorderForm" input="/form/spotorder.jsp" scope="request" validate="true"
 */
public class SpotorderAction extends DispatchAction {
	// 依赖注入 SpotorderService
		private SpotorderService spotorderService;

		public SpotorderService getSpotorderService() {
			return spotorderService;
		}

		public void setSpotorderService(SpotorderService spotorderService) {
			this.spotorderService = spotorderService;
		}
		
		
		// 通过action  method方式删除用户
		public ActionForward spotorderDeleteExecute(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) throws Exception{
			String spotorderid=request.getParameter("spotorderid");
			Spotorder user=new Spotorder();
			user.setOrderid(spotorderid);
			spotorderService.spotorderDelete(user);
			String nameorid=request.getParameter("spotorderfindnfo");
			String s1=request.getParameter("starttime");
			String s2=request.getParameter("endtime");
			if(nameorid!=null)
				nameorid=URLDecoder.decode(nameorid,"UTF-8");
			else
				nameorid="";
			if(s1==null||s2==null)
			{
				Format format = new SimpleDateFormat("yyyy-MM-dd");
				Date date=new Date();
				Calendar calendar=new  GregorianCalendar(); 
			    calendar.setTime(date); 
			    calendar.add(calendar.DATE,1);//把日期往后增加一天.整数往后推,负数往前移动 
			    date=calendar.getTime();   //这个时间就是日期往后推一天的结果 
				s2=format.format(date);
				calendar.add(calendar.DATE,-31);//把日期往后增加一天.整数往后推,负数往前移动 
			    date=calendar.getTime();   //这个时间就是日期往后推一天的结果 
				s1=format.format(date);
			}
			request.getSession().setAttribute("starttime", s1);
			request.getSession().setAttribute("endtime", s2);
			request.getSession().setAttribute("spotorderfindnfo", nameorid);
			request.getSession().setAttribute("spotorderlist",spotorderService.spotorderLikeNameOrId(nameorid,s1,s2));  //设置session
			return mapping.findForward("spotorderMana");  //成功
		}
		
		// 通过action  method方式  获取所有用户
		public ActionForward spotorderFindExecute(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) throws Exception{
			//decode一次
			String nameorid=request.getParameter("spotorderfindnfo");
			String s1=request.getParameter("starttime");
			String s2=request.getParameter("endtime");
			if(nameorid!=null)
				nameorid=URLDecoder.decode(nameorid,"UTF-8");
			else
				nameorid="";
			if(s1==null||s2==null)
			{
				Format format = new SimpleDateFormat("yyyy-MM-dd");
				Date date=new Date();
				Calendar calendar=new  GregorianCalendar(); 
			    calendar.setTime(date); 
			    calendar.add(calendar.DATE,1);//把日期往后增加一天.整数往后推,负数往前移动 
			    date=calendar.getTime();   //这个时间就是日期往后推一天的结果 
				s2=format.format(date);
				calendar.add(calendar.DATE,-31);//把日期往后增加一天.整数往后推,负数往前移动 
			    date=calendar.getTime();   //这个时间就是日期往后推一天的结果 
				s1=format.format(date);
			}
			request.getSession().setAttribute("starttime", s1);
			request.getSession().setAttribute("endtime", s2);
			request.getSession().setAttribute("spotorderfindnfo", nameorid);
			request.getSession().setAttribute("spotorderlist",spotorderService.spotorderLikeNameOrId(nameorid,s1,s2));  //设置session
			return mapping.findForward("spotorderMana");  //成功
		}
}