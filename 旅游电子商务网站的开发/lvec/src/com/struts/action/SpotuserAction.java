/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.struts.action;

import java.net.URLDecoder;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.pojo.Hotelorder;
import com.pojo.Spotorder;
import com.pojo.Spotuser;
import com.service.SpotuserService;
import com.struts.form.SpotuserForm;
import com.util.StringUtil;
/** 
 * MyEclipse Struts
 * Creation date: 04-16-2016
 * 
 * XDoclet definition:
 * @struts.action path="/spotuser" name="spotuserForm" input="/form/spotuser.jsp" scope="request" validate="true"
 */
public class SpotuserAction extends DispatchAction {
	/*
	 * Generated Methods
	 */
	// 依赖注入 SpotuserService
	private SpotuserService spotuserService;

	public SpotuserService getSpotuserService() {
		return spotuserService;
	}

	public void setSpotuserService(SpotuserService spotuserService) {
		this.spotuserService = spotuserService;
	}
	
	// 添加订单
	public void spotorderAdd(String []data) throws ParseException
	{
		Spotorder order=new Spotorder();
		order.setSpotid(new Integer(data[0]));
		order.setSpotname(data[1]);
		order.setSpotprice(Double.valueOf(data[2]));
		order.setUsername(data[3]);
		order.setName(data[4]);
		order.setPhone(data[5]);
		order.setNums(new Integer(data[6]));
		order.setTotalprice(Double.valueOf(data[7]));
		order.setTratime(StringUtil.getTimestampFromDate(StringUtil.getDateFromString(data[8])));
		order.setOrdertime(StringUtil.getTimestampFromDate(new Date()));
		order.setOrderstatus("0");
		SimpleDateFormat sdf1 = new SimpleDateFormat("yyyyMMddhhmmss");
		order.setOrderid(sdf1.format(new Date()));
		spotuserService.saveSpotOrder(order);//保存订单
	}
	//添加酒店订单
	public void hotelorderAdd(String []data)throws ParseException
	{
		Hotelorder order=new Hotelorder();
		order.setHotelid(new Integer(data[0]));
		order.setHotelname(data[1]);
		order.setRoomid(new Integer(data[2]));
		order.setRoomname(data[3]);
		order.setRoomprice(Double.valueOf(data[4]));
		order.setUsername(data[5]);
		order.setName(data[6]);
		order.setPhone(data[7]);
		order.setNums(new Integer(data[8]));
		order.setTotalprice(Double.valueOf(data[9]));
		order.setCheckintime(StringUtil.getTimestampFromDate(StringUtil.getDateFromString(data[10])));
		order.setOrdertime(StringUtil.getTimestampFromDate(new Date()));
		order.setOrderstatus("0");
		SimpleDateFormat sdf1 = new SimpleDateFormat("yyyyMMddhhmmss");
		order.setOrderid(sdf1.format(new Date()));
		spotuserService.saveHotelOrder(order);
	}
	
	// 通过用户密码 验证登录  dwr实现AJAX方式 验证登录
	public String spotuserLogin(String username,String password)
	{
		//ActionContext actionContext = ActionContext.APPLICATION_SCOPE
		if(spotuserService.spotuserLogin(username,password))
			return "success";
    	return "fail";
	}
	// 用户是否存在
	public boolean spotuserIsExist(String username)
	{
		return spotuserService.spotuserIsExist(username);
	}
	// 注册用户
	public void spotuserRegister(String username,String pwd,String name,String phone,String addr)
	{
		Spotuser user=new Spotuser(username,pwd,phone,
				addr,name);
		spotuserService.spotuserAdd(user);
	}
	// 修改用户信息
	public void spotuserModifyInfo(String id,String username,String pwd,String name,String phone,String addr)
	{
		Spotuser user=new Spotuser(username,pwd,phone,
				addr,name);
		user.setUserid(new Integer(id));
		spotuserService.spotuserModify(user);
	}
	
	// 提交评论
	public void addcomment(String type,String id,String username,String content,String userid) throws Exception
	{
		spotuserService.addcomment(type,id,username,content,userid);
	}
	
	// 通过action  method方式添加用户
	public ActionForward spotuserAddExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		SpotuserForm spotuserForm = (SpotuserForm) form;// TODO Auto-generated method stub
		// 乱码问题 (String username, String userpwd, String phone, String addr,String name)
		Spotuser user=new Spotuser(spotuserForm.getUsername(),spotuserForm.getUserpwd(),spotuserForm.getPhone(),
				spotuserForm.getAddr(),spotuserForm.getName());
		spotuserService.spotuserAdd(user);
		//System.out.println(user.getUsername());
		request.getSession().setAttribute("spotuserlist",spotuserService.spotuserLikeNameOrId(""));  //设置session
		return mapping.findForward("spotuserMana");  //成功
	}
	
	// 通过action  method方式删除用户
	public ActionForward spotuserDeleteExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		String spotuserid=request.getParameter("spotuserid");
		Spotuser user=new Spotuser();
		user.setUserid(Integer.parseInt(spotuserid));
		spotuserService.spotuserDelete(user);
		request.getSession().setAttribute("spotuserlist",spotuserService.spotuserLikeNameOrId(""));  //设置session
		return mapping.findForward("spotuserMana");  //成功
	}
	
	// 通过action  method方式修改用户之前
	public ActionForward spotuserBeforeModifyExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		String spotuserid=request.getParameter("spotuserid");
		Spotuser user=spotuserService.spotuserByID(Integer.parseInt(spotuserid));
		request.getSession().setAttribute("spotusermodifyinfo",user);  //设置session
		return mapping.findForward("spotuserBeforeModify");  //成功
	}
	
	// 通过action  method方式修改用户
	public ActionForward spotuserModifyExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		SpotuserForm spotuserForm = (SpotuserForm) form;// TODO Auto-generated method stub
		String spotuserid=request.getParameter("spotuserid");
		Spotuser user=new Spotuser(spotuserForm.getUsername(),spotuserForm.getUserpwd(),spotuserForm.getPhone(),
				spotuserForm.getAddr(),spotuserForm.getName());
		user.setUserid(Integer.parseInt(spotuserid));
		//System.out.println(user.getUsername());
		spotuserService.spotuserModify(user);
		request.getSession().setAttribute("spotuserlist",spotuserService.spotuserLikeNameOrId(""));  //设置session
		return mapping.findForward("spotuserMana");  //成功
	}
	
	
	// 通过action  method方式  获取所有用户
	public ActionForward spotuserFindExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		SpotuserForm spotuserForm = (SpotuserForm) form;// TODO Auto-generated method stub
		//decode一次
		String nameorid=request.getParameter("spotuserfindnfo");
		if(nameorid!=null)
			nameorid=URLDecoder.decode(nameorid,"UTF-8");
		else
			nameorid="";
		request.getSession().setAttribute("spotuserlist",spotuserService.spotuserLikeNameOrId(nameorid));  //设置session
		return mapping.findForward("spotuserMana");  //成功
	}

	// 通过action  method方式修改用户之前
	public ActionForward spotuserLoginExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		String spotusername=request.getParameter("spotusername");
		Spotuser user=spotuserService.spotuserByUsername(spotusername);
		request.getSession().setAttribute("spotuser",user);  //设置session
		return mapping.findForward("spotuserLogin");  //成功
	}
	
	//获得指定用户的指定类型的订单
	public ActionForward spotuserOrderByTypeExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		String ordertype=request.getParameter("ordertype");
		if(ordertype==null) ordertype="0";
		String username=request.getParameter("username");
		request.getSession().setAttribute("orderlist",spotuserService.getOrderListByUserAndType(username,ordertype));  //设置session
		request.getSession().setAttribute("ordertype",ordertype);  //设置session
		return mapping.findForward("spotuserOrderLookMana");  //成功
	}
	
}