/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.struts.action;

import java.net.URLDecoder;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.pojo.Hotel;
import com.pojo.Viewspot;
import com.service.HotelService;
import com.struts.form.ViewspotForm;
/** 
 * MyEclipse Struts
 * Creation date: 04-17-2016
 * 
 * XDoclet definition:
 * @struts.action path="/hotel" name="hotelForm" input="/form/hotel.jsp" scope="request" validate="true"
 */
public class HotelAction extends DispatchAction {
	// 依赖注入 HotelService
		private HotelService hotelService;

		public HotelService getHotelService() {
			return hotelService;
		}

		public void setHotelService(HotelService hotelService) {
			this.hotelService = hotelService;
		}
		
		
		// 通过action  method方式删除用户
		public ActionForward hotelDeleteExecute(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) throws Exception{
			String hotelid=request.getParameter("hotelid");
			Hotel user=new Hotel();
			user.setHotelid(Integer.parseInt(hotelid));
			hotelService.hotelDelete(user);
			request.getSession().setAttribute("hotellist",hotelService.hotelLikeNameOrId(""));  //设置session
			return mapping.findForward("hotelMana");  //成功
		}
		
		// 通过action  method方式修改用户之前
		public ActionForward hotelBeforeModifyExecute(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) throws Exception{
			String hotelid=request.getParameter("hotelid");
			Hotel user=hotelService.hotelByID(Integer.parseInt(hotelid));
			request.getSession().setAttribute("hotelmodifyinfo",user);  //设置session
			return mapping.findForward("hotelBeforeModify");  //成功
		}
		
		// 通过action  method方式  获取所有用户
		public ActionForward hotelFindExecute(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) throws Exception{
			//decode一次
			String nameorid=request.getParameter("hotelfindnfo");
			if(nameorid!=null)
				nameorid=URLDecoder.decode(nameorid,"UTF-8");
			else
				nameorid="";
			request.getSession().setAttribute("hotellist",hotelService.hotelLikeNameOrId(nameorid));  //设置session
			return mapping.findForward("hotelMana");  //成功
		}
		
		//
		// 通过action  method方式  获取所有用户
		public ActionForward hotelListExecute(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) throws Exception{
			//decode一次
			String findinfo=request.getParameter("findinfo");
			if(findinfo!=null)
				findinfo=URLDecoder.decode(findinfo,"UTF-8");
			else
				findinfo="";
			String city=request.getParameter("city");
			if(city!=null)
				city=URLDecoder.decode(city,"UTF-8");
			else
				city="";
			request.getSession().setAttribute("findinfo",findinfo);
			request.getSession().setAttribute("city",city);
			request.getSession().setAttribute("hotellist",hotelService.hotelLikeNameAndCity(findinfo,city));  //设置session
			request.getSession().setAttribute("citylist",hotelService.findAllCity());
			return mapping.findForward("hotelListMana");  //成功
		}
		
		//查看单个景点信息
		public ActionForward hotelLookExecute(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) throws Exception{
			//decode一次
			String id=request.getParameter("hotelid");
			//System.out.println(spotid);
			Hotel hotelinfo=hotelService.hotelByID(new Integer(id));
			request.getSession().setAttribute("hotelinfo",hotelinfo);  //设置session  getRoomtypeByHotelid
			request.getSession().setAttribute("hotelroomtype",hotelService.getRoomtypeByHotelid(hotelinfo.getHotelid().toString()));  //设置session  getRoomtypeByHotelid
			request.getSession().setAttribute("viewspotcity",hotelService.getViewspotByCity(hotelinfo.getHotelcity()));  //设置session
			request.getSession().setAttribute("hotelcomment",hotelService.getHotelcommentByHotelid(hotelinfo.getHotelid().toString()));  //设置session
			return mapping.findForward("hotelInfoMana");  //成功
		}
}