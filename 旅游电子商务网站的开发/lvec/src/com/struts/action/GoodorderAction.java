/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.struts.action;

import java.net.URLDecoder;
import java.text.Format;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.pojo.Goodorder;
import com.service.GoodorderService;
import com.struts.form.GoodorderForm;

/** 
 * MyEclipse Struts
 * Creation date: 04-18-2016
 * 
 * XDoclet definition:
 * @struts.action path="/goodorder" name="goodorderForm" input="/form/goodorder.jsp" scope="request" validate="true"
 */
public class GoodorderAction extends DispatchAction {
	// 依赖注入 GoodorderService
	private GoodorderService goodorderService;

	public GoodorderService getGoodorderService() {
		return goodorderService;
	}

	public void setGoodorderService(GoodorderService goodorderService) {
		this.goodorderService = goodorderService;
	}
	
	
	// 通过action  method方式删除用户
	public ActionForward goodorderDeleteExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		String goodorderid=request.getParameter("goodorderid");
		Goodorder user=new Goodorder();
		user.setOrderid(goodorderid);
		goodorderService.goodorderDelete(user);
		String nameorid=request.getParameter("goodorderfindnfo");
		String s1=request.getParameter("starttime");
		String s2=request.getParameter("endtime");
		if(nameorid!=null)
			nameorid=URLDecoder.decode(nameorid,"UTF-8");
		else
			nameorid="";
		if(s1==null||s2==null)
		{
			Format format = new SimpleDateFormat("yyyy-MM-dd");
			Date date=new Date();
			Calendar calendar=new  GregorianCalendar(); 
		    calendar.setTime(date); 
		    calendar.add(calendar.DATE,1);//把日期往后增加一天.整数往后推,负数往前移动 
		    date=calendar.getTime();   //这个时间就是日期往后推一天的结果 
			s2=format.format(date);
			calendar.add(calendar.DATE,-31);//把日期往后增加一天.整数往后推,负数往前移动 
		    date=calendar.getTime();   //这个时间就是日期往后推一天的结果 
			s1=format.format(date);
		}
		request.getSession().setAttribute("starttime", s1);
		request.getSession().setAttribute("endtime", s2);
		request.getSession().setAttribute("goodorderfindnfo", nameorid);
		request.getSession().setAttribute("goodorderlist",goodorderService.goodorderLikeNameOrId(nameorid,s1,s2));  //设置session
		return mapping.findForward("goodorderMana");  //成功
	}
	
	// 通过action  method方式  获取所有用户
	public ActionForward goodorderFindExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		//decode一次
		String nameorid=request.getParameter("goodorderfindnfo");
		String s1=request.getParameter("starttime");
		String s2=request.getParameter("endtime");
		if(nameorid!=null)
			nameorid=URLDecoder.decode(nameorid,"UTF-8");
		else
			nameorid="";
		if(s1==null||s2==null)
		{
			Format format = new SimpleDateFormat("yyyy-MM-dd");
			Date date=new Date();
			Calendar calendar=new  GregorianCalendar(); 
		    calendar.setTime(date); 
		    calendar.add(calendar.DATE,1);//把日期往后增加一天.整数往后推,负数往前移动 
		    date=calendar.getTime();   //这个时间就是日期往后推一天的结果 
			s2=format.format(date);
			calendar.add(calendar.DATE,-31);//把日期往后增加一天.整数往后推,负数往前移动 
		    date=calendar.getTime();   //这个时间就是日期往后推一天的结果 
			s1=format.format(date);
		}
		request.getSession().setAttribute("starttime", s1);
		request.getSession().setAttribute("endtime", s2);
		request.getSession().setAttribute("goodorderfindnfo", nameorid);
		request.getSession().setAttribute("goodorderlist",goodorderService.goodorderLikeNameOrId(nameorid,s1,s2));  //设置session
		return mapping.findForward("goodorderMana");  //成功
	}
}