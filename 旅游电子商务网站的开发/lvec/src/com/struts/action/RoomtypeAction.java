/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.struts.action;

import java.net.URLDecoder;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.pojo.Roomtype;
import com.service.RoomtypeService;
import com.struts.form.RoomtypeForm;

/** 
 * MyEclipse Struts
 * Creation date: 04-18-2016
 * 
 * XDoclet definition:
 * @struts.action path="/roomtype" name="roomtypeForm" input="/form/roomtype.jsp" scope="request" validate="true"
 */
public class RoomtypeAction extends DispatchAction {

	// 依赖注入 RoomtypeService
	private RoomtypeService roomtypeService;

	public RoomtypeService getRoomtypeService() {
		return roomtypeService;
	}

	public void setRoomtypeService(RoomtypeService roomtypeService) {
		this.roomtypeService = roomtypeService;
	}
	
	public void addRoomtype(String hotelid,String roomname,String roomdescr,String roomprice)
	{
		Roomtype item=new Roomtype();
		item.setHotelid(new Integer(hotelid));
		item.setRoomdescr(roomdescr);
		item.setRoomname(roomname);
		item.setRoomprice(Double.valueOf(roomprice));
		roomtypeService.roomtypeAdd(item);
	}
	
	public void editRoomtype(String roomid,String roomname,String roomdescr,String roomprice)
	{
		Roomtype item=roomtypeService.roomtypeByID(new Integer(roomid));
		item.setRoomdescr(roomdescr);
		item.setRoomname(roomname);
		item.setRoomprice(Double.valueOf(roomprice));
		roomtypeService.roomtypeModify(item);
	}
			
	// 通过action  method方式删除用户
	public ActionForward roomtypeDeleteExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		String roomtypeid=request.getParameter("roomtypeid");
		Roomtype user=roomtypeService.roomtypeByID(new Integer(roomtypeid));
		roomtypeService.roomtypeDelete(user);
		request.getSession().setAttribute("hotelid",user.getHotelid());
		request.getSession().setAttribute("hotelname",roomtypeService.getHotelNameByHotelid(user.getHotelid()));
		request.getSession().setAttribute("roomtypelist",roomtypeService.roomtypeAll(user.getHotelid()));  //设置session
		return mapping.findForward("roomtypeMana");  //成功
	}
	
	
	// 通过action  method方式  获取所有用户
	public ActionForward roomtypeFindExecute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		//decode一次
		String hotel=request.getParameter("hotelid");
		request.getSession().setAttribute("hotelid",hotel);
		request.getSession().setAttribute("hotelname",roomtypeService.getHotelNameByHotelid(new Integer(hotel)));
		request.getSession().setAttribute("roomtypelist",roomtypeService.roomtypeAll(new Integer(hotel)));  //设置session
		return mapping.findForward("roomtypeMana");  //成功
	}
}