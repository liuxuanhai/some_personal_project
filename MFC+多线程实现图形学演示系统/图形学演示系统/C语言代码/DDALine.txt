         /***************************************************/
         /************                        ***************/
         /************    DDA直线生成算法     ***************/
         /************                        ***************/
         /***************************************************/
1、当|dx|>|dy|时     |Dx|=1, |Dy|=m；
      否则：Dx=1/m，|Dy|=1
2、Dx, Dy的符号与dx, dy的符号相同。
    这两条规律可以导致程序的简化。其中steps变量的设置，
    以及Dx=dx/steps; Dy=dy/steps等语句，正是利用了上述两条规律，
    使得程序变得简练。使用DDA算法，每生成一条直线做两次除法，
    每画线中一点做两次加法。因此，用DDA法生成直线的速度是相当快的。
C程序代码如下：
dda_line (xa, ya, xb, yb, c)
int xa, ya, xb, yb, c;
{
   float delta_x, delta_y, x, y;
   int dx, dy, steps, k;
   dx=xb-xa;
   dy=yb-ya;
   if (abs(dx)>abs(dy))   /*判断步长1的方向*/
      steps=abs(dx);      /*steps作为控制数*/
    else 	
      steps=abs (dy);
      delta_x=(float)dx / (float)steps;  /* 值为±1或±1/m*/
      delta_y=(float)dy / (float)steps;  /* 值为±1或±m*/
      x=xa;
      y=ya;
      putpixel(x, y, c);    /*画起点，c为点的颜色*/
      for (k=1; k<=steps; k++)   /*循环画点成直线*/
       {
         x+=delta_x;
	 y+=delta_y;
	 set_pixel(x, y, c);
       }
}

