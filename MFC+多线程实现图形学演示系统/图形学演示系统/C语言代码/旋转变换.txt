         /***************************************************/
         /************                        ***************/
         /************      图形旋转变换      ***************/
         /************                        ***************/
         /***************************************************/
点的旋转变换是将点绕坐标原点旋转一角度的坐标变换。
设点P(x,y)绕原点旋转变换θ角度(假设按逆时针旋转为正角)，
生成的新的点坐标P'(x',y')。将点P绕原点做逆时针旋转θ角度
的变换看作将坐标系绕原点做顺时针旋转α角度的等价变换。 
        x'=xcosθ-ysinθ 	         
        y'=xsinθ+ycosθ        
用齐次坐标和矩阵表示为：
                        [ cosθ  sinθ  0] 
      [x',y',1']=[x,y,1][-sinθ  cosθ  0]        
                        [  0       0    1]
C源代码：
#include <stdio.h>
#include <graphics.h>
#include <math.h>

main()
{
   int x0=300,y0=300,x1,y1,x2,y2,x3,y3;
   int i,k;
   char c;
   double dx=0,rad=0.0174533,ts1;
   double a1[3]={400,300,1},a2[3]={400,400,1},a3[3]={300,400,1};
   double b[3][3];

   int gdriver, gmode;
   gdriver=DETECT;
   initgraph(&gdriver, &gmode, "");
   rectangle(300,300,400,400);
   getch();
   while(c!=27)     /* 回车换行结束 */
    {

      dx+=36.0;
      ts1=dx*rad;

      b[0][0]=cos(ts1);
      b[0][1]=sin(ts1);
      b[0][2]=0;
      b[1][0]=-sin(ts1);
      b[1][1]=cos(ts1);
      b[1][2]=0;
      b[2][0]=300*(1-cos(ts1))+300*sin(ts1);
      b[2][1]=300*(1-cos(ts1))-300*sin(ts1);
      b[2][2]=1;

     x1=a1[0]*b[0][0]+a1[1]*b[1][0]+a1[2]*b[2][0];
     y1=a1[0]*b[0][1]+a1[1]*b[1][1]+a1[2]*b[2][1];

     x2=a2[0]*b[0][0]+a2[1]*b[1][0]+a2[2]*b[2][0];
     y2=a2[0]*b[0][1]+a2[1]*b[1][1]+a2[2]*b[2][1];

     x3=a3[0]*b[0][0]+a3[1]*b[1][0]+a3[2]*b[2][0];
     y3=a3[0]*b[0][1]+a3[1]*b[1][1]+a3[2]*b[2][1];

    cleardevice();
    setcolor(2);
    line(x0,y0,x1,y1);
    line(x1,y1,x2,y2);
    line(x2,y2,x3,y3);
    line(x3,y3,x0,y0);
    c=getch();

  }
  closegraph();

}