         /***************************************************/
         /************                        ***************/
         /************     三次B样条曲线      ***************/
         /************                        ***************/
         /***************************************************/
三次B样条曲线的基函数为

G03(t)=1/6(-t^3+3*t^2-3*t+1)
G13(t)=1/6(3*t^3-6*t^2+4)
G23(t)=1/6(-3*t^3+3*t^2+3*t+1)
G33(t)=1/6*t^3
                                            
三次B样条曲线段                          [-1 3 -3 1  ]
P3（t）＝1/6*[t^3  t^2  t  1]|  3 -6 3 0][p0 p1 p2 p3]-->(转置）
                                         | -3 0  3 0 ]             (T)
                                         [  1 4  1 0 ] 

四个离散点为 p0 p1 p2 p3
源程序：
#include<graphics.h>
#include<conio.h>
#define N 10

float px[N]={60,95,152,117,225,302,380,318,449,502};
float py[N]={98,65,54,152,243,98,102,202,248,130};

main()
{
   float a0,a1,a2,a3,b0,b1,b2,b3;
   int k,x,y;
   float i,t,dt;

   int graphDriver=DETECT;
   int graphMode=0;
   initgraph(&graphDriver,&graphMode,"");

   setbkcolor(BLUE);
   setcolor(YELLOW);

   line(50,300,600,300);
   line(100,10,100,320);

   dt=1/(float)N;
   for(k=0;k<N;k++)
   {
     if(k==0)
    moveto(px[k]+100,300-py[k]);
     lineto(px[k]+100,300-py[k]);
   }
   setlinestyle(0,0,3);
   for(k=0;k<N-3;k++)
   {
      a0=(px[k]+4*px[k+1]+px[k+2])/6;
      a1=(px[k+2]-px[k])/2;
      a2=(px[k]-2*px[k+1]+px[k+2])/2;
      a3=-(px[k]-3*px[k+1]+3*px[k+2]-px[k+3])/6;

      b0=(py[k]+4*py[k+1]+py[k+2])/6;
      b1=(py[k+2]-py[k])/2;
      b2=(py[k]-2*py[k+1]+py[k+2])/2;
      b3=-(py[k]-3*py[k+1]+3*py[k+2]-py[k+3])/6;

      for(i=0;i<N;i+=0.1)
      {
         t=i*dt;
         x=100+a0+a1*t+a2*t*t+a3*t*t*t;
         y=300-(b0+b1*t+b2*t*t+b3*t*t*t);
         if(i==0.0)
           moveto(x,y);
         lineto(x,y);
      }
    }
    getch();
    closegraph();
} 