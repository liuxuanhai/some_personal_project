         /***************************************************/
         /************                        ***************/
         /************     扫描线填充算法     ***************/
         /************                        ***************/
         /***************************************************/
算法步骤：
(1)确定多边形所占有的最大扫描线数，得到多边形顶点的最小和最大y值（ymin和ymax）。
(2)从y=ymin到y=ymax，每次用一条扫描线进行填充。
(3)对一条扫描线填充的过程可分为四个步骤：
		a.求交
		b.排序
		c.交点配对
		d.区间填色
程序代码片断：
#define n1 6  /*第一个多边形顶点数*/
#define n2 3  /*第二个多边形顶点数*/
#define d  4  /*扫描线间隔*/
void Scan_fill(int x[30],int y[30])
/*********其中x[0]=0,y[0]=0舍弃空间*********/
{
   int i,j;
   int nn[2][2];
   int d,k,h;
   float xx[30],yy[30],t;
   int xjd[3000],yjd[3000],xmax,xmin,ymax,ymin;
   n1+=1;
   n2+=1;
   setcolor(6);
   for(i=1;i<=n1-1;i++)
      line(x[i],y[i],x[i+1],y[i+1]);
   for(i=n1+1;i<=n1+n2-1;i++)
      line(x[i],y[i],x[i+1],y[i+1]);
   nn[0][0]=1;
   nn[0][1]=n1;
   nn[1][0]=n1+1;
   nn[1][1]=n1+n2;
   ymin=500;
   ymax=0;
   for(j=0;j<=1;j++)
      {
         for(i=nn[j][0];i<=nn[j][1];i++)
            {
               xx[i]+=0.5;  /*多边形顶点抬高0.5*/
               yy[i]+=0.5;
               if(yy[i]<(float)ymin)  /*计算多边形顶点的最大最小值*/
                  ymin=(int)yy[i];
               else
                  if(yy[i]>(float)ymax)
                     ymax=(int)yy[i];
            }
      }
    for(h=ymin;h<=ymax;h+=d)   /*扫描线循环*/
      {
         k=0;
         for(j=0;j<=1;j++)     /*多边形循环*/
            for(i=nn[j][0];i<=nn[j][1]-1;i++)  /*多边形的边循环*/
               {
                  if((int)yy[i+1]!=(int)yy[i])
                     {
                        t=((float)-yy[i])/(yy[i+1]-yy[i]);
                        if(t>=0&&t<=1) /*扫描线h与边有交点*/
                          {            /*计算交点*/
                             xjd[k]=xx[i]+(xx[i+1]-xx[i])*t;
                             yjd[j]=h;
                             k+=1;
                          }
                     }
               }
         for(i=0;i<=k-1;k++)  /*交点排序*/
            {
               l=i;
               for(m=i+1;m<=k-1;m++)
                  if(xjd[m]<xjd[l])
                     l=m;
               if(l!=i)
                  {
                     t=yjd[i];
                     yjd[i]=yjd[l];
                     yjd[l]=t;
                     t=xjd[i];
                     xjd[i]=xjd[l];
                     xjd[l]=t;
                  }
            }
          for(i=0;i<=k-1;i+=2)   /*填充*/
            {
               line(xjd[i],yjd[i],xjd[i+1],yjd[i+1])
            }
        }
}
                           
                     